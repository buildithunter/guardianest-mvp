name: Deploy

on:
  push:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy-web:
    name: Deploy Web to Vercel
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: ${{ (github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production') && 'production' || 'development' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web app
        run: npm run build --workspace=@guardianest/web
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: apps/web
          vercel-args: ${{ (github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production') && '--prod' || '' }}

  deploy-server:
    name: Deploy Server to Cloudflare Workers
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: ${{ (github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production') && 'production' || 'development' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Cloudflare Workers
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.event.inputs.environment }}" == "production" ]]; then
            npm run deploy --workspace=@guardianest/server
          else
            npm run deploy:dev --workspace=@guardianest/server
          fi
        working-directory: apps/server
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

  deploy-mobile-preview:
    name: Build & Publish Mobile Preview
    runs-on: ubuntu-latest
    timeout-minutes: 30
    environment: ${{ (github.ref == 'refs/heads/main' || github.event.inputs.environment == 'production') && 'production' || 'development' }}
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install dependencies
        run: npm ci

      - name: Expo login
        run: expo login --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}

      - name: Build and publish preview
        run: |
          cd apps/mobile
          npx expo publish --non-interactive
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
